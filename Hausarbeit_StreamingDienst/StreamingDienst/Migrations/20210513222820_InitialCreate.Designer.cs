// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using StreamingDienst.Data;

namespace StreamingDienst.Migrations
{
    [DbContext(typeof(StreamingDienstContext))]
    [Migration("20210513222820_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("StreamingDienst.Modelle.Film", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("FilmLaenge")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("FilmTitel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Kaufpreis")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Leihpreis")
                        .HasColumnType("decimal(18,2)");

                    b.Property<byte[]>("VideoData")
                        .HasColumnType("varbinary(max)");

                    b.HasKey("ID");

                    b.ToTable("Film");
                });

            modelBuilder.Entity("StreamingDienst.Modelle.FilmGenre", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Bezeichnung")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("FGenreIDID")
                        .HasColumnType("int");

                    b.Property<int?>("GFilmIDID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("FGenreIDID");

                    b.HasIndex("GFilmIDID");

                    b.ToTable("FilmGenre");
                });

            modelBuilder.Entity("StreamingDienst.Modelle.Folge", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("FPreisIDID")
                        .HasColumnType("int");

                    b.Property<int?>("FSerienIDID")
                        .HasColumnType("int");

                    b.Property<decimal>("FolgenLaenge")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("FolgenTitel")
                        .HasColumnType("int");

                    b.Property<byte[]>("VideoData")
                        .HasColumnType("varbinary(max)");

                    b.HasKey("ID");

                    b.HasIndex("FPreisIDID");

                    b.HasIndex("FSerienIDID");

                    b.ToTable("Folge");
                });

            modelBuilder.Entity("StreamingDienst.Modelle.Genre", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("FilmID")
                        .HasColumnType("int");

                    b.Property<string>("GenreName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("FilmID");

                    b.ToTable("Genre");
                });

            modelBuilder.Entity("StreamingDienst.Modelle.Preis", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Betrag")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ID");

                    b.ToTable("Preis");
                });

            modelBuilder.Entity("StreamingDienst.Modelle.Serie", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AnzahlFolgen")
                        .HasColumnType("int");

                    b.Property<string>("SerienTitel")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Serie");
                });

            modelBuilder.Entity("StreamingDienst.Modelle.User", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BIC")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Bank")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Benutzername")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EMail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Geburtsdatum")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Gesperrt")
                        .HasColumnType("bit");

                    b.Property<decimal>("Guthaben")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Hash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IBAN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Salt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Vorname")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("User");
                });

            modelBuilder.Entity("StreamingDienst.Modelle.UserFilm", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("FUserIDID")
                        .HasColumnType("int");

                    b.Property<int?>("UFilmIDID")
                        .HasColumnType("int");

                    b.Property<int?>("USerienIDID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("FUserIDID");

                    b.HasIndex("UFilmIDID");

                    b.HasIndex("USerienIDID");

                    b.ToTable("UserFilm");
                });

            modelBuilder.Entity("StreamingDienst.Modelle.FilmGenre", b =>
                {
                    b.HasOne("StreamingDienst.Modelle.Genre", "FGenreID")
                        .WithMany()
                        .HasForeignKey("FGenreIDID");

                    b.HasOne("StreamingDienst.Modelle.Film", "GFilmID")
                        .WithMany()
                        .HasForeignKey("GFilmIDID");
                });

            modelBuilder.Entity("StreamingDienst.Modelle.Folge", b =>
                {
                    b.HasOne("StreamingDienst.Modelle.Preis", "FPreisID")
                        .WithMany()
                        .HasForeignKey("FPreisIDID");

                    b.HasOne("StreamingDienst.Modelle.Serie", "FSerienID")
                        .WithMany()
                        .HasForeignKey("FSerienIDID");
                });

            modelBuilder.Entity("StreamingDienst.Modelle.Genre", b =>
                {
                    b.HasOne("StreamingDienst.Modelle.Film", null)
                        .WithMany("Genre")
                        .HasForeignKey("FilmID");
                });

            modelBuilder.Entity("StreamingDienst.Modelle.UserFilm", b =>
                {
                    b.HasOne("StreamingDienst.Modelle.User", "FUserID")
                        .WithMany()
                        .HasForeignKey("FUserIDID");

                    b.HasOne("StreamingDienst.Modelle.Film", "UFilmID")
                        .WithMany()
                        .HasForeignKey("UFilmIDID");

                    b.HasOne("StreamingDienst.Modelle.Serie", "USerienID")
                        .WithMany()
                        .HasForeignKey("USerienIDID");
                });
#pragma warning restore 612, 618
        }
    }
}
